"use strict";(self.webpackChunklit_wiki=self.webpackChunklit_wiki||[]).push([[307],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),u=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,f=d["".concat(i,".").concat(m)]||d[m]||p[m]||l;return n?r.createElement(f,s(s({ref:t},c),{},{components:n})):r.createElement(f,s({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,s=new Array(l);s[0]=d;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var u=2;u<l;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8653:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return p}});var r=n(7462),a=n(3366),l=(n(7294),n(3905)),s=["components"],o={},i="Values",u={unversionedId:"getting_started/values",id:"getting_started/values",title:"Values",description:'Values are like atoms, that objects are made of. They are immutable, that means that string "cookie" will always stay the same.',source:"@site/docs/0_getting_started/1_values.md",sourceDirName:"0_getting_started",slug:"/getting_started/values",permalink:"/lit-wiki/docs/getting_started/values",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/0_getting_started/1_values.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Syntax",permalink:"/lit-wiki/docs/getting_started/syntax"},next:{title:"Variables",permalink:"/lit-wiki/docs/getting_started/variables"}},c={},p=[{value:"Booleans",id:"booleans",level:2},{value:"Numbers",id:"numbers",level:2},{value:"Strings",id:"strings",level:2},{value:"Escape symbols",id:"escape-symbols",level:3},{value:"Interpolation",id:"interpolation",level:3},{value:"Range",id:"range",level:2},{value:"Null",id:"null",level:2}],d={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,s);return(0,l.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"values"},"Values"),(0,l.kt)("p",null,"Values are like atoms, that objects are made of. They are immutable, that means that string ",(0,l.kt)("inlineCode",{parentName:"p"},'"cookie"')," will always stay the same."),(0,l.kt)("h2",{id:"booleans"},"Booleans"),(0,l.kt)("p",null,"Boolean is the most basic value there is. As in any language, it can be only ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),".\nThey are represented by the ",(0,l.kt)("a",{parentName:"p",href:"/docs/modules/core_module/bool"},"Bool")," class."),(0,l.kt)("h2",{id:"numbers"},"Numbers"),(0,l.kt)("p",null,"Numbers are represented by doubles, and look just as you would expect:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"10\n-128\n42.98\n0b01010\n0xff\n")),(0,l.kt)("p",null,"They are represented by the ",(0,l.kt)("a",{parentName:"p",href:"/docs/modules/core_module/number"},"Number")," class."),(0,l.kt)("h2",{id:"strings"},"Strings"),(0,l.kt)("p",null,"Strings is where the stuff starts to get interesting. It's an array of bytes, that uses UTF-8 to represent text.\nThey are surrounded by double quotes (and double quotes only, we do not support single quotes to avoid the confusion!):"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'"muffin"\n')),(0,l.kt)("p",null,"The string can also span multiple lines:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'"cookies\nare the\nbest"\n')),(0,l.kt)("h3",{id:"escape-symbols"},"Escape symbols"),(0,l.kt)("p",null,"A few escape symbols are supported:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'"\\"" // Doublequote\n"\\\\" // Backslash\n"\\0" // The NULL byte\n"\\{" // {\n"\\a" // Alarm beep\n"\\b" // Backspace\n"\\f" // Formfeed\n"\\n" // Newline\n"\\r" // Carriedge return\n"\\t" // Tab\n"\\v" // Vertical tab\n')),(0,l.kt)("h3",{id:"interpolation"},"Interpolation"),(0,l.kt)("p",null,"If you prefix your double quotes by a dollar sign, the string starts supporting evaluation of expressions inside of double curvy brackets:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'print($"9 = {3 + 3}")\n')),(0,l.kt)("p",null,"Strings are instances of the ",(0,l.kt)("a",{parentName:"p",href:"/docs/modules/core_module/string"},"String")," class."),(0,l.kt)("h2",{id:"range"},"Range"),(0,l.kt)("p",null,"Range combines two numbers. It is inclusive and commonly used for iteration:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"for (var i in 0 .. 10) {\n    print(i)\n}\n")),(0,l.kt)("p",null,"But ranges are also useful for getting a subset of an array:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"var array = [ 1, 2, 3, 4 ]\nprint(array[1 .. 2]) // [ 2, 3 ]\n")),(0,l.kt)("p",null,"Ranges are instances of the ",(0,l.kt)("a",{parentName:"p",href:"/docs/modules/core_module/range"},"Range")," class."),(0,l.kt)("h2",{id:"null"},"Null"),(0,l.kt)("p",null,"Null indicates a non-existing value. If you call a function, and it returns nothing, you will receive null."))}m.isMDXComponent=!0}}]);