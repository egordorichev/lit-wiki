"use strict";(self.webpackChunklit_wiki=self.webpackChunklit_wiki||[]).push([[811],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return v}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),d=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=d(n),v=a,p=m["".concat(u,".").concat(v)]||m[v]||s[v]||i;return n?r.createElement(p,l(l({ref:t},c),{},{components:n})):r.createElement(p,l({ref:t},c))}));function v(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var d=2;d<i;d++)l[d]=n[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5976:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return u},default:function(){return v},frontMatter:function(){return o},metadata:function(){return d},toc:function(){return s}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),l=["components"],o={},u="Math",d={unversionedId:"modules/math_module/math",id:"modules/math_module/math",title:"Math",description:"Static fields",source:"@site/docs/modules/math_module/math.md",sourceDirName:"modules/math_module",slug:"/modules/math_module/math",permalink:"/lit-wiki/docs/modules/math_module/math",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/modules/math_module/math.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Math module",permalink:"/lit-wiki/docs/modules/math_module/"},next:{title:"Random",permalink:"/lit-wiki/docs/modules/math_module/random"}},c={},s=[{value:"Static fields",id:"static-fields",level:2},{value:"Pi",id:"pi",level:3},{value:"Tau",id:"tau",level:3},{value:"Static methods",id:"static-methods",level:2},{value:"abs",id:"abs",level:3},{value:"sin",id:"sin",level:3},{value:"cos",id:"cos",level:3},{value:"tan",id:"tan",level:3},{value:"asin",id:"asin",level:3},{value:"acos",id:"acos",level:3},{value:"atan",id:"atan",level:3},{value:"atan2",id:"atan2",level:3},{value:"floor",id:"floor",level:3},{value:"ceil",id:"ceil",level:3},{value:"round",id:"round",level:3},{value:"min",id:"min",level:3},{value:"max",id:"max",level:3},{value:"mid",id:"mid",level:3},{value:"toRadians",id:"toradians",level:3},{value:"toDegrees",id:"todegrees",level:3},{value:"sqrt",id:"sqrt",level:3},{value:"log",id:"log",level:3},{value:"exp",id:"exp",level:3}],m={toc:s};function v(e){var t=e.components,n=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"math"},"Math"),(0,i.kt)("h2",{id:"static-fields"},"Static fields"),(0,i.kt)("h3",{id:"pi"},"Pi"),(0,i.kt)("h3",{id:"tau"},"Tau"),(0,i.kt)("h2",{id:"static-methods"},"Static methods"),(0,i.kt)("h3",{id:"abs"},"abs"),(0,i.kt)("h3",{id:"sin"},"sin"),(0,i.kt)("h3",{id:"cos"},"cos"),(0,i.kt)("h3",{id:"tan"},"tan"),(0,i.kt)("h3",{id:"asin"},"asin"),(0,i.kt)("h3",{id:"acos"},"acos"),(0,i.kt)("h3",{id:"atan"},"atan"),(0,i.kt)("h3",{id:"atan2"},"atan2"),(0,i.kt)("h3",{id:"floor"},"floor"),(0,i.kt)("h3",{id:"ceil"},"ceil"),(0,i.kt)("h3",{id:"round"},"round"),(0,i.kt)("h3",{id:"min"},"min"),(0,i.kt)("h3",{id:"max"},"max"),(0,i.kt)("h3",{id:"mid"},"mid"),(0,i.kt)("h3",{id:"toradians"},"toRadians"),(0,i.kt)("h3",{id:"todegrees"},"toDegrees"),(0,i.kt)("h3",{id:"sqrt"},"sqrt"),(0,i.kt)("h3",{id:"log"},"log"),(0,i.kt)("h3",{id:"exp"},"exp"))}v.isMDXComponent=!0}}]);